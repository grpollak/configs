;;; Compiled snippets and support files for `python-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'python-mode
                     '(("transformer" "from sklearn.utils.validation import check_X_y, check_array, check_is_fitted\n\nclass $1(skl.base.BaseEstimator, skl.base.TransformerMixin):\n    \"\"\"$2\"\"\"\n    def __init__(self):\n        super($1, self).__init__()\n        ${3:# TODO: initialize...}\n\n    def fit(self, X, y):\n        \"\"\"Can be used to fit parameters\n            if we only want to transform just return self\n        \"\"\"\n        # check if X and y are consistent\n        # multi_output for multi labels\n        X, y = check_X_y(X, y, multi_output=False)\n        ${4:# TODO: implement, fit if we want to fit\n            # then store fitted coefficients but do not transform X yet}\n        return self\n\n    def transform(self, X, y=None):\n        # Checks if the estimator is fitted by verifying the presence\n        # of “all_or_any” of the passed attributes rais a NotFittedError\n        # with message otherwise \n        ${5:check_is_fitted(self, ${6:[\"attributes\"]})}\n        X = check_array(X)\n        ${7:# TODO: implement and return transformed X}\n\n\n\n" "Scikit Transformer derived class" nil nil nil "/home/pollakg/.doom.d/snippets/python-mode/transformer" nil nil)
                       ("prt" "print($1)$0" "print" nil nil nil "/home/pollakg/.doom.d/snippets/python-mode/print" nil nil)
                       ("detest" "def ${1:name}($2):\n    \"\"\"\n    $3\n    ${2:$\n    (let* ((indent\n            (concat \"\\n\" (make-string (current-column) 32)))\n           (args\n            (mapconcat\n             '(lambda (x)\n                (if (not (string= (nth 0 x) \"\"))\n                    (concat \"@param \" (nth 0 x) \": \" indent\n                            \"@type \" (nth 0 x) \": \")))\n             (mapcar\n              '(lambda (x)\n                 (mapcar\n                  '(lambda (x)\n                     (replace-regexp-in-string \"[[:blank:]]*$\" \"\"\n                      (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))\n                  x))\n              (mapcar '(lambda (x) (split-string x \"=\"))\n                      (split-string text \",\")))\n             indent)))\n      (if (string= args \"\")\n          (concat indent \"@return: \" indent \"@rtype: \" indent (make-string 3 34))\n        (mapconcat\n         'identity\n         (list \"\" args \"@return: \" \"@rtype: \" (make-string 3 34))\n         indent)))\n    }\n    $0\n" "def" nil nil nil "/home/pollakg/.doom.d/snippets/python-mode/def" nil nil)))


;;; Do not edit! File generated at Sun Jan 24 11:49:27 2021
