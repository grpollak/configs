#+TITLE: My Emacs Config
* Evil
#+begin_src emacs-lisp
(after! evil-snipe (evil-snipe-mode -1))
#+end_src

#+RESULTS:

* Themes
 There are two ways to load a theme. Both assume the theme is installed and
 available. You can either set ~doom-theme~ or manually load a theme with the
 ~load-theme~ function.
#+begin_src emacs-lisp
    ;; (setq doom-theme 'doom-one)
    (load-theme 'sanityinc-tomorrow-eighties t)
#+end_src
** TODO Themes: clean up add conditional lisp variable
# ,#+BEGIN_SRC emacs-lisp
# ;; (setq doom-theme 'doom-one)
#        ;; (use-package moe-theme                     ; Theme
#        ;; :ensure t
#        ;; :config
#        ;; (load-theme 'moe-dark t))
#         ;(use-package zenburn-theme
#         ;:ensure t
#         ;:config
#         ;(load-theme 'zenburn t))
#         ;(use-package tangotango-theme
#         ;:ensure t)
#          ;; (load-theme 'sanityinc-tomorrow-day t))
#      ;;  (use-package material-theme
#      ;;       :ensure t
#      ;;       :init
#      ;;
#      ;; (load-theme 'material t))
#           ;(use-package ample-theme
#           ;:init (progn (load-theme 'ample t t)
#           ;            (load-theme 'ample-flat t t)
#           ;            (load-theme 'ample-light t t)
#           ;            (enable-theme 'ample-flat))
#           ;:defer t
#           ;:ensure t)
#           ;; (use-package farmhouse-theme
#           ;;  :ensure t
#           ;;  :init
#           ;;     (load-theme 'farmhouse-dark t))
# #+END_SRC
* Font
 Doom exposes five (optional) variables for controlling fonts in Doom. Here
 are the three important ones:

 + `doom-font'
 + `doom-variable-pitch-font'
 + `doom-big-font' -- used for `doom-big-font-mode'; use this for presentations or streaming.
    They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
    font string. You generally only need these two:
   #+begin_src emacs-lisp
    ;; (setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light))
    ;;       doom-variable-pitch-font (font-spec :family "sans" :size 13))
   #+end_src

* Line Number
This determines the style of line numbers in effect. If set to `nil', line
numbers are disabled. For relative line numbers, set this to `relative'.
#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src

* Org
If you use `org' and don't want your org files in the default location below,
change `org-directory'. It must be set before org loads!
#+begin_src emacs-lisp
(setq org-directory "~/org/")
(setq org-agenda-files (list "~/org" "~/.doom.d/"))
#+end_src

#+RESULTS:
| ~/org | ~/.doom.d/ |

* LaTeX
** Basic Configurations
#+begin_src emacs-lisp
(setq +latex-viewers '(evince))
#+end_src
** px - preview LaTeX in any mode
#+BEGIN_SRC emacs-lisp
(use-package px)
#+END_SRC
* Mail
Each path is relative to `+mu4e-mu4e-mail-path', which is ~/.mail by default
To send mails we need to configure ~smtp~
#+BEGIN_SRC emacs-lisp
;; (set-email-account! "Gmail"
;;   '((mu4e-sent-folder       . "/gmail/[Gmail]/Gesendet")
;;     (mu4e-drafts-folder     . "/gmail/[Gmail]/Entw&APw-rfe")
;;     (mu4e-trash-folder      . "/gmail/[Gmail]/Papierkorb")
;;     (mu4e-refile-folder     . "/gmail/[Gmail]")
;;     (smtpmail-smtp-user     . "pollakgeorg@gmail.com")
;;     (user-mail-address      . "pollakgeorg@gmail.com")    ;; only needed for mu < 1.4
;;     (mu4e-compose-signature . "---\nGeorg R. Pollak"))
;;   t)
(setq mu4e-view-show-images t)
#+END_SRC

#+RESULTS:
: t
* Python
** Documentation
*** Sphinx
#+BEGIN_SRC emacs-lisp
(use-package sphinx-doc
:bind (:map sphinx-doc-mode-map
            ("SPC C-d" . sphinx-doc))
)
#+END_SRC
